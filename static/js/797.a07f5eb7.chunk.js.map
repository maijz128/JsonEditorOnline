{"version":3,"file":"static/js/797.a07f5eb7.chunk.js","mappings":"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","sources":["hooks/useSchema.js","LoadingError.jsx","modal/modal.js","modal/confirm.js","modal/documentPropertiesModal.js","modal/openModal.js","modal/prompt.js","controls/Toggle.js","JSONEditorComponent.js","modal/schema/UrlSchemaPreview.js","modal/schema/PanelSchemaPreview.js","modal/schema/CloudDocumentSchemaPreview.js","modal/schema/schemaModal.js","hooks/useTimeout.js","controls/CopyToClipboardButton.js","modal/shareModal.js","utils/objectUtils.ts","utils/jsonUtils.ts","modal/CSVExportModal.js","modal/ConfigurationModal.tsx","utils/proxyUrl.js","JSONEditorPanel.js"],"sourcesContent":["import { useEffect } from 'react'\nimport { useAsync } from 'react-async-hook'\nimport { createAjvValidator } from 'vanilla-jsoneditor'\nimport { loadUrl } from '../rest'\nimport { loadDocument, parseContent } from '../utils/documentUtils'\nimport { createDebug } from '../utils/debug'\n\nconst debug = createDebug('jsoneditoronline:useSchema')\n\nconst DEFAULT_SCHEMA = { type: 'NONE', leftPanel: false, rightPanel: false }\n\n/**\n * Hook to load a schema\n * @param {SchemaConfig} schemaConfig\n * @param {string} panelId\n * @param {Array.<{panelId: string, compoundKey: string, document: Document}>} allPanels\n * @property {Content} leftPanelContent\n * @property {Content} rightPanelContent\n */\nexport default function useSchema(schemaConfig, panelId, allPanels) {\n  if (!schemaConfig) {\n    schemaConfig = DEFAULT_SCHEMA\n  }\n\n  const schemaFromId = useAsync(loadDocument, [schemaConfig.compoundKey])\n  const schemaParser = JSON // we use the native parser here, LossessJSON is not supported anyway by Ajv\n\n  const url = schemaConfig.type === 'URL' ? schemaConfig.url : null\n  const schemaFromUrl = useAsync(loadUrl, [url])\n  // TODO: should not invoke loadUrl when url is null (loadUrl now has a workaround for this, but it is ugly)\n\n  useEffect(() => {\n    debug('schema config changed', { schemaConfig })\n  }, [schemaConfig])\n\n  if (schemaConfig) {\n    try {\n      if (schemaConfig.type === 'TEXT') {\n        return {\n          loading: false,\n          error: null,\n          content: validateContent(parseContent(schemaConfig.content, schemaParser))\n        }\n      }\n\n      if (schemaConfig.type === 'DOCUMENT') {\n        return {\n          loading: schemaFromId.status === 'loading',\n          error: schemaFromId.error,\n          content:\n            schemaFromId.result && schemaFromId.status !== 'loading'\n              ? validateContent(parseContent(schemaFromId.result.content, schemaParser))\n              : null\n        }\n      }\n\n      if (schemaConfig.type === 'URL') {\n        return {\n          loading: schemaFromUrl.status === 'loading',\n          error: schemaFromUrl.error,\n          content: schemaFromUrl.status !== 'loading' ? validateContent(schemaFromUrl.result) : null\n        }\n      }\n\n      if (schemaConfig.type === 'PANEL') {\n        if (schemaConfig.panelId === panelId) {\n          return {\n            loading: false,\n            error: 'Error: Cannot select panel itself as JSON schema.',\n            content: null\n          }\n        }\n\n        const panel = allPanels.find((panel) => panel.panelId === schemaConfig.panelId)\n\n        if (!panel) {\n          return {\n            loading: false,\n            error: `Error: Panel with id \"${schemaConfig.panelId}\" not found.`,\n            content: null\n          }\n        }\n\n        return {\n          loading: false,\n          error: null,\n          content: validateContent(parseContent(panel.document.content, schemaParser))\n        }\n      }\n    } catch (err) {\n      return {\n        loading: false,\n        error: err.toString(),\n        content: null\n      }\n    }\n  }\n\n  return {\n    loading: false,\n    error: null,\n    content: null\n  }\n}\n\n// try to compile, this will fail and throw an exception when the schema is invalid\nfunction validateContent(schema) {\n  if (schema) {\n    createAjvValidator({ schema })\n  }\n\n  return schema\n}\n","import { faExclamationTriangle, faFile, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { useState } from 'react'\nimport './LoadingError.scss'\n\nexport default function LoadingError({ error, onNew }) {\n  const [showReasons, setShowReasons] = useState(false)\n\n  function handleReadMore() {\n    setShowReasons(true)\n  }\n\n  return (\n    <div className=\"loading-error\">\n      <FontAwesomeIcon icon={faExclamationTriangle} /> {error.toString()}\n      {error.reasons && showReasons && (\n        <div className=\"reasons\">\n          <br />\n          Possible reasons:\n          <ul>\n            {error.reasons.map((reason, index) => (\n              <li key={index}>{reason}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <div className=\"suggestion\">\n        <button className=\"action primary\" onClick={onNew}>\n          <FontAwesomeIcon icon={faFile} /> Open a new document\n        </button>\n        {error.reasons && !showReasons && (\n          <button className=\"action\" onClick={handleReadMore}>\n            <FontAwesomeIcon icon={faQuestionCircle} /> Read more\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './modal.scss'\nimport classnames from 'classnames'\n\n/**\n * Usage:\n *\n *     <Modal onRequestClose={function}>\n *       <h1>hello world!</h1>\n *     </Modal>\n *\n * Methods:\n *\n *     modal.close()    // cleans up global event listeners\n *\n */\nexport default class Modal extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.backgroundRef = null\n\n    this.handleRequestClose = this.handleRequestClose.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.close = this.close.bind(this)\n  }\n\n  render() {\n    return (\n      <div\n        ref={(element) => {\n          this.backgroundRef = element\n        }}\n        className={classnames('modal-background', this.props.className)}\n        onClick={this.handleRequestClose}\n      >\n        <div className={classnames('modal-foreground', this.props.className)}>\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown)\n    if (document.activeElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur()\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleRequestClose(event) {\n    if (event.target === this.backgroundRef) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      this.props.onRequestClose()\n    }\n  }\n\n  handleKeyDown(event) {\n    if (event.which === 27) {\n      // ESC\n      event.preventDefault()\n      event.stopPropagation()\n\n      // We schedule triggering the onRequestClose callback.\n      // In case of multiple open modals, the second one will cancel\n      // sending onRequestClose of the first modal.\n      clearTimeout(timeout)\n      timeout = setTimeout(() => this.props.onRequestClose(), 0)\n    }\n  }\n\n  close() {\n    this.componentWillUnmount()\n  }\n}\n\nlet timeout = null\n","import React from 'react'\nimport Modal from './modal.js'\nimport classnames from 'classnames'\nimport { createRoot } from 'react-dom/client'\n\n/**\n * Show a confirmation modal\n *\n * Usage:\n *\n *   const modal = confirm.show({\n *     title: string | React.Component,\n *     text: string | React.Component,\n *     onOk: function,\n *     onCancel: function,\n *\n *     textOk: string,\n *     textCancel: string,\n *\n *     classOk: string,\n *     classCancel: string\n *   })\n *\n *   modal.close();\n *\n * Example:\n *\n *   confirm({\n *     title: 'Delete',\n *     text: 'Are your sure you want to delete this document?',\n *     onOk: function (value) {\n *       console.log('deleting file...');\n *     },\n *     onCancel: function () {\n *       console.loge('cancelled deleting file')\n *     }\n *   });\n *\n */\nclass Confirm extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.okRef = null\n    this.modalRef = null\n\n    this.handleCancel = this.handleCancel.bind(this)\n    this.handleOk = this.handleOk.bind(this)\n    this.close = this.close.bind(this)\n  }\n\n  render() {\n    return (\n      <Modal\n        ref={(element) => {\n          this.modalRef = element\n        }}\n        onRequestClose={this.handleCancel}\n      >\n        <div className=\"modal modal-confirm\">\n          <h1>{this.props.title}</h1>\n          <div className=\"modal-text\">{this.props.text}</div>\n          <div className=\"modal-action-menu\">\n            <button\n              className={classnames('modal-button', this.props.classCancel)}\n              onClick={this.handleCancel}\n            >\n              {this.props.textCancel || 'Cancel'}\n            </button>\n            <button\n              ref={(element) => {\n                this.okRef = element\n              }}\n              onClick={this.handleOk}\n              className={classnames('modal-button', 'primary', this.props.classOk)}\n            >\n              {this.props.textOk || 'Ok'}\n            </button>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n\n  componentDidMount() {\n    // modal will become visible, set focus to the input value\n    setTimeout(() => this.okRef.focus())\n  }\n\n  handleOk(event) {\n    event.preventDefault() // stop form submit\n\n    this.close()\n\n    if (this.props.onOk) {\n      this.props.onOk()\n    }\n  }\n\n  handleCancel() {\n    this.close()\n\n    if (this.props.onCancel) {\n      this.props.onCancel()\n    }\n  }\n\n  close() {\n    this.modalRef.close()\n    this.props.onClose()\n  }\n}\n\n/**\n * Show a confirm modal\n * @param {Object} props    Object with parameters. Available parameters:\n *                          - title:      string | React.Component\n *                          - text:       string | React.Component\n *                          - onOk:       function\n *                          - onCancel:   function\n *                          - textOk:     string   optional, 'Ok' by default.\n *                          - textCancel: string   optional, 'Cancel' by default.\n *                          - classOk:     string  optional, 'primary' by default\n *                          - classCancel: string  optional, null by default\n */\nexport default function confirm(props) {\n  const container = document.createElement('div')\n  document.body.appendChild(container)\n\n  function handleClose() {\n    document.body.removeChild(container)\n  }\n\n  createRoot(container).render(<Confirm {...props} onClose={handleClose} />)\n}\n","import React from 'react'\nimport { DOCUMENT_SOURCE_DESCRIPTIONS } from '../constants'\nimport { formatDate } from '../utils/dateUtils'\nimport { getContentsDescription, splitCompoundKey, stringifyContent } from '../utils/documentUtils'\nimport { formatSize } from '../utils/fileUtils'\nimport './documentPropertiesModal.scss'\nimport Modal from './modal'\nimport { createRoot } from 'react-dom/client'\n\nfunction DocumentPropertiesModal({ document, compoundKey, onClose }) {\n  const { documentSource } = splitCompoundKey(compoundKey)\n  const documentSourceDescription = DOCUMENT_SOURCE_DESCRIPTIONS[documentSource]\n\n  return (\n    <Modal onRequestClose={onClose} className=\"document-properties\">\n      <div className=\"modal modal-document-properties\">\n        <h1>Document properties</h1>\n\n        <table className=\"properties\">\n          <tbody>\n            <tr>\n              <th>Name</th>\n              <td>{document.name || '-'}</td>\n            </tr>\n            <tr>\n              <th>Storage</th>\n              <td>\n                {documentSource || '-'}\n                {documentSourceDescription ? ` (${documentSourceDescription})` : ''}\n              </td>\n            </tr>\n            <tr>\n              <th>Updated</th>\n              <td>{document.updated ? formatDate(document.updated) : '-'}</td>\n            </tr>\n            <tr>\n              <th>Contents</th>\n              <td>{getContentsDescription(document.content)}</td>\n            </tr>\n            <tr>\n              <th>Size</th>\n              <td>\n                {\n                  formatSize(stringifyContent(document.content, JSON).length) // we use the native JSON parser here, we only need the length\n                }\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div className=\"modal-action-menu\">\n          <button className=\"modal-button\" onClick={onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\n/**\n * Show a modal with document details\n * @param {Object} props    Object with parameters. Available parameters:\n * @property {Document} document\n * @property {CompoundKey} compoundKey\n */\nexport default function documentPropertiesModal(props) {\n  const container = document.createElement('div')\n  document.body.appendChild(container)\n\n  function handleClose() {\n    document.body.removeChild(container)\n  }\n\n  createRoot(container).render(<DocumentPropertiesModal {...props} onClose={handleClose} />)\n}\n","import Modal from './modal'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { listRecentFiles } from '../recentFiles'\nimport { isEmpty } from 'lodash-es'\nimport './openModal.scss'\nimport { formatDate } from '../utils/dateUtils'\nimport confirm from './confirm.js'\nimport classnames from 'classnames'\nimport { faCloud, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { isCloudDocument, splitCompoundKey } from '../utils/documentUtils'\nimport { createRoot } from 'react-dom/client'\n\n// FIXME: rename onOpen to onOpenFromCloud, onDeleteFromCloud?\nfunction OpenModal({ onOpen, onClose, onDelete }) {\n  const refModal = useRef(null)\n  const refSearchText = useRef(null)\n  const [searchText, setSearchText] = useState('')\n  const [recentFiles, setRecentFiles] = useState(listRecentFiles())\n  const [deletingFileIds, setDeletingFileIds] = useState({})\n\n  const hasSearchText = !isEmpty(searchText.trim())\n  const filteredRecentFiles = hasSearchText\n    ? recentFiles.filter((recentFile) => {\n        return recentFile.name.toLowerCase().includes(searchText.toLowerCase())\n      })\n    : recentFiles\n\n  // set focus to search field\n  useEffect(() => {\n    if (refSearchText.current) {\n      refSearchText.current.focus()\n    }\n  }, [refSearchText])\n\n  function close() {\n    refModal.current.close()\n    onClose()\n  }\n\n  function handleOpen(compoundKey) {\n    close()\n    onOpen(compoundKey)\n  }\n\n  async function handleDelete(compoundKey, name = splitCompoundKey(compoundKey).documentId) {\n    confirm({\n      title: 'Delete document',\n      text: `Are you sure you want to delete document \"${name}\"?`,\n      textOk: 'Delete',\n      classOk: 'danger',\n      onOk: async () => {\n        setDeletingFileIds({\n          ...deletingFileIds,\n          [compoundKey]: true\n        })\n\n        await onDelete(compoundKey)\n\n        // refresh the list\n        setRecentFiles(listRecentFiles())\n\n        setDeletingFileIds({\n          ...deletingFileIds,\n          [compoundKey]: false\n        })\n      }\n    })\n  }\n\n  function handleCancel() {\n    close()\n  }\n\n  return (\n    <Modal ref={refModal} onRequestClose={handleCancel}>\n      <div className=\"modal modal-open\">\n        <h1>Open a recent file</h1>\n        <div className=\"search-box\">\n          <span className=\"label\">Search:</span>\n          <input\n            ref={refSearchText}\n            className=\"search-text\"\n            placeholder=\"Enter a document name...\"\n            value={searchText}\n            onChange={(event) => setSearchText(event.target.value)}\n          />\n        </div>\n        <div className=\"info\">\n          {hasSearchText\n            ? `Showing ${filteredRecentFiles.length} out of ${recentFiles.length} documents`\n            : `Showing ${recentFiles.length} documents`}\n        </div>\n        <div className=\"recent-files\">\n          {!isEmpty(filteredRecentFiles) ? (\n            filteredRecentFiles.map((file) => {\n              const deleting = deletingFileIds[file.compoundKey] || false\n              const className = classnames({\n                'recent-file': true,\n                deleting\n              })\n\n              return (\n                <div key={file.compoundKey} className={className}>\n                  <button\n                    className=\"modal-button open\"\n                    title=\"Click to open this document\"\n                    disabled={deleting}\n                    onClick={() => handleOpen(file.compoundKey)}\n                  >\n                    {isCloudDocument(file.compoundKey) && (\n                      <span title=\"This document is stored in the cloud\">\n                        <FontAwesomeIcon icon={faCloud} />{' '}\n                      </span>\n                    )}\n                    {file.name}\n                    {deleting ? ' (deleting...)' : null}\n                    <div className=\"updated\">\n                      Last modified: {file.updated ? formatDate(file.updated) : '(unknown)'}\n                    </div>\n                  </button>\n                  <button\n                    className=\"modal-button remove\"\n                    disabled={deleting}\n                    title=\"Click to delete this document\"\n                    onClick={() => handleDelete(file.compoundKey, file.name)}\n                  >\n                    <FontAwesomeIcon icon={faTimes} />\n                  </button>\n                </div>\n              )\n            })\n          ) : (\n            <div className=\"no-files\">(no recent files)</div>\n          )}\n        </div>\n        <div className=\"modal-action-menu\">\n          <button className=\"modal-button\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\n/**\n * Show a modal to open files\n * @param {Object} props    Object with parameters. Available parameters:\n * @property {function(compoundKey: CompoundKey)} onOpen\n * @property {function(compoundKey: CompoundKey)} onDelete\n */\nexport default function openModal(props) {\n  const container = document.createElement('div')\n  document.body.appendChild(container)\n\n  function handleClose() {\n    document.body.removeChild(container)\n  }\n\n  createRoot(container).render(\n    <OpenModal onOpen={props.onOpen} onDelete={props.onDelete} onClose={handleClose} />\n  )\n}\n","import classnames from 'classnames'\nimport React from 'react'\nimport Modal from './modal.js'\nimport './prompt.scss'\nimport { createRoot } from 'react-dom/client'\n\n/**\n * Show a prompt where the user can enter input\n *\n * Usage:\n *\n *   const modal = prompt.show({\n *     title: string | React.Component,\n *     text: string | React.Component,\n *     value: string | null,\n *     optionText: string | null,\n *     optionTitle: string | null,\n *     optionValue: * | null,\n *     optionOptions: Object<value: *, text: string>>[] | null,\n *     optionChange: (value: *) => void | null,\n *     checkboxText: string | null,\n *     checkboxTitle: string | null,\n *     checkboxValue: boolean | null,\n *     checkboxChange: (value: *) => void | null,\n *     onOk: function,\n *     onCancel: function,\n *     validate: function,\n *\n *     textOk: string,\n *     textCancel: string,\n *\n *     classOk: string,\n *     classCancel: string\n *   })\n *\n *   modal.close();\n *\n * Example:\n *\n *   prompt({\n *     title: 'Save document',\n *     text: 'Enter a title for the document:',\n *     value: 'myDocument',\n *     onOk: function (value) {\n *       console.log('save file as: ' + value);\n *     },\n *     onCancel: function () {\n *       console.loge('cancelled save file')\n *     }\n *   });\n *\n */\nexport class Prompt extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      optionValue: props.optionValue || null,\n      checkboxValue: props.checkboxValue || false,\n      showValidationResult: false\n    }\n\n    this.valueRef = null\n    this.modalRef = null\n\n    this.handleOk = this.handleOk.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleChangeOption = this.handleChangeOption.bind(this)\n    this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this)\n    this.close = this.close.bind(this)\n  }\n\n  render() {\n    const error =\n      this.props.validate && this.state.showValidationResult\n        ? this.props.validate(this.state.value)\n        : null\n\n    return (\n      <Modal\n        ref={(element) => {\n          this.modalRef = element\n        }}\n        className={this.props.className}\n        onRequestClose={this.handleCancel}\n      >\n        <div className=\"modal modal-prompt\">\n          <h1>{this.props.title}</h1>\n          <div className=\"modal-text\">{this.props.text}</div>\n          <form onSubmit={this.handleOk}>\n            <input\n              ref={(element) => {\n                this.valueRef = element\n              }}\n              type=\"text\"\n              className={classnames('regular', { error })}\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n            {this.props.optionOptions && (\n              <div className=\"options\">\n                {this.props.optionText && <div>{this.props.optionText}:</div>}\n                <select\n                  value={this.state.optionValue}\n                  title={this.props.optionTitle}\n                  onChange={this.handleChangeOption}\n                >\n                  {this.props.optionOptions.map((option) => {\n                    return (\n                      <option key={option.value} value={option.value}>\n                        {option.text}\n                      </option>\n                    )\n                  })}\n                </select>\n              </div>\n            )}\n            {this.props.checkboxText && (\n              <label title={this.props.checkboxTitle}>\n                <input\n                  type=\"checkbox\"\n                  checked={this.state.checkboxValue}\n                  onChange={this.handleChangeCheckbox}\n                />{' '}\n                {this.props.checkboxText}\n              </label>\n            )}\n          </form>\n          {error && <div className=\"error-message\">{error}</div>}\n          <div className=\"modal-action-menu\">\n            <button\n              className={classnames('modal-button', this.props.classCancel)}\n              onClick={this.handleCancel}\n            >\n              {this.props.textCancel || 'Cancel'}\n            </button>\n            <button\n              onClick={this.handleOk}\n              className={classnames('modal-button', 'primary', this.props.classOk)}\n            >\n              {this.props.textOk || 'Ok'}\n            </button>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n\n  componentDidMount() {\n    // modal will become visible, set focus to the input value\n    setTimeout(() => this.valueRef.select(), 0)\n  }\n\n  handleOk(event) {\n    event.preventDefault() // stop form submit\n\n    if (this.props.validate) {\n      const error = this.props.validate(this.state.value)\n\n      if (error != null) {\n        // cancel the Ok action\n        this.setState({ showValidationResult: true })\n        this.valueRef.select()\n        return\n      }\n    }\n\n    this.close()\n\n    if (this.props.onOk) {\n      this.props.onOk(this.state.value, this.state.optionValue, this.state.checkboxValue)\n    }\n  }\n\n  handleCancel() {\n    this.close()\n\n    if (this.props.onCancel) {\n      this.props.onCancel()\n    }\n  }\n\n  handleChange() {\n    this.setState({\n      value: this.valueRef.value\n    })\n  }\n\n  handleChangeOption(event) {\n    const optionValue = event.target.value\n\n    this.setState({ optionValue })\n\n    if (this.props.optionChange) {\n      this.props.optionChange(optionValue)\n    }\n  }\n\n  handleChangeCheckbox(event) {\n    const checkboxValue = event.target.checked\n\n    this.setState({ checkboxValue })\n\n    if (this.props.checkboxChange) {\n      this.props.checkboxChange(checkboxValue)\n    }\n  }\n\n  close() {\n    this.modalRef.close()\n    this.props.onClose()\n  }\n}\n\n/**\n * Show a modal prompt\n * @deprecated Use <Prompt /> instead of prompt(...)\n * @param {Object} props    Object with parameters. Available parameters:\n * @property {string | React.Component} title\n * @property {string | React.Component} text\n * @property {string | null} value\n * @property {function} onOk\n * @property {function} [onCancel]\n * @property {function (value: string) : string | null} [validate]\n * @property {string} [className]\n * @property {string} [textOk]     'Ok' by default.\n * @property {string} [textCancel] 'Cancel' by default.\n * @property {string} [classOk]    'primary' by default.\n * @property {string} [classCancel] null by default.\n */\nexport default function prompt(props) {\n  const container = document.createElement('div')\n  document.body.appendChild(container)\n\n  function handleClose() {\n    document.body.removeChild(container)\n  }\n\n  createRoot(container).render(<Prompt {...props} onClose={handleClose} />)\n}\n","import React from 'react'\nimport './Toggle.scss'\nimport classnames from 'classnames'\n\n/**\n * @typedef {Object} ToggleOption\n * @property {*} value\n * @property {string} text\n * @property {string} [className]\n */\n\n/**\n * @param {Object} props\n * @property {ToggleOption[]} options\n * @property {*} value\n * @property {function(schema: Schema)} onChange\n * @property {string} [className]\n * @return {React.FunctionComponent}\n */\nexport default function Toggle({ options, value, onChange, className }) {\n  return (\n    <div className={classnames('toggle', className)}>\n      {options.map((option) => {\n        const optionClassName = classnames({\n          className: option.className,\n          selected: option.value === value\n        })\n\n        return (\n          <button\n            key={String(option.value)}\n            className={optionClassName}\n            onClick={(event) => {\n              event.preventDefault()\n              onChange(option.value)\n            }}\n          >\n            {option.text}\n          </button>\n        )\n      })}\n    </div>\n  )\n}\n","import { isEqual } from 'lodash-es'\nimport memoizeOne from 'memoize-one'\nimport React, { PureComponent } from 'react'\nimport {\n  createAjvValidator,\n  jmespathQueryLanguage,\n  JSONEditor,\n  lodashQueryLanguage,\n  renderJSONSchemaEnum,\n  renderValue\n} from 'vanilla-jsoneditor'\nimport './JSONEditorComponent.scss'\nimport { notifyError } from './utils/modalUtils.js'\nimport classnames from 'classnames'\nimport { createDebug } from './utils/debug'\n\nconst debug = createDebug('jsoneditoronline:JSONEditorComponent')\n\nconst queryLanguages = [lodashQueryLanguage, jmespathQueryLanguage]\n\n// TODO: rewrite to function component and hooks\nexport default class JSONEditorComponent extends PureComponent {\n  // helper function to memoize a created Ajv validator\n  memoizeValidator = memoizeOne(function createValidator(schema, schemaDefinitions) {\n    if (schema) {\n      try {\n        debug('createAjvValidator', { schema, schemaDefinitions })\n        return createAjvValidator({ schema, schemaDefinitions })\n      } catch (err) {\n        debug('failed to compile validator:', err.toString())\n\n        return () => [{ path: [], message: err.toString() }]\n      }\n    } else {\n      return undefined\n    }\n  }, isEqual)\n\n  memoizeOnRenderValue = memoizeOne(function (schema, schemaDefinitions) {\n    if (schema) {\n      // enable rendering a select box for enums\n      return function onRenderValue(props) {\n        return renderJSONSchemaEnum(props, schema, schemaDefinitions) || renderValue(props)\n      }\n    } else {\n      return renderValue\n    }\n  })\n\n  componentDidMount() {\n    debug('componentDidMount')\n\n    this.jsoneditor = new JSONEditor({\n      target: this.container,\n      props: {\n        onError: (err) => {\n          console.error(err)\n          notifyError(\n            <div className=\"parse-error\">\n              <code>{err.toString()}</code>\n            </div>\n          )\n        },\n        validator: this.memoizeValidator(this.props.schema, this.props.schemaDefinitions),\n        onRenderValue: this.memoizeOnRenderValue(this.props.schema, this.props.schemaDefinitions),\n        queryLanguages,\n        ...this.props\n      }\n    })\n\n    if (this.props.onJsonEditorRef) {\n      this.props.onJsonEditorRef(this.jsoneditor)\n    }\n\n    // expose the editor on window for debugging or hacking purposes\n    if (this.props.id) {\n      if (!window.jsoneditors) {\n        window.jsoneditors = {}\n      }\n      window.jsoneditors[this.props.id] = this.jsoneditor\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.jsoneditor.updateProps(this.props)\n\n    if (\n      this.props.schema !== prevProps.schema ||\n      this.props.schemaDefinitions !== prevProps.schemaDefinitions\n    ) {\n      this.jsoneditor.updateProps({\n        validator: this.memoizeValidator(this.props.schema, this.props.schemaDefinitions),\n        onRenderValue: this.memoizeOnRenderValue(this.props.schema, this.props.schemaDefinitions)\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    debug('componentWillUnmount')\n\n    if (this.jsoneditor) {\n      this.jsoneditor.destroy()\n      this.jsoneditor = null\n      this.schema = null\n      this.schemaDefinitions = null\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={classnames('jsoneditor-react-container', this.props.className, {\n          'read-only': this.props.readOnly\n        })}\n        ref={(elem) => {\n          this.container = elem\n        }}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { useAsync } from 'react-async-hook'\nimport { loadUrl } from '../../rest'\nimport JSONEditorComponent from '../../JSONEditorComponent'\n\nexport default function UrlSchemaPreview({\n  url,\n  indentation,\n  queryLanguageId,\n  onChangeQueryLanguage\n}) {\n  const { loading, result, error } = useAsync(loadUrl, [url])\n\n  return error ? (\n    <div className=\"error\">{error.toString()}</div>\n  ) : loading ? (\n    <div className=\"loading\">Loading...</div>\n  ) : (\n    <JSONEditorComponent\n      mode=\"tree\"\n      readOnly\n      indentation={indentation}\n      mainMenuBar={false}\n      navigationBar={false}\n      queryLanguageId={queryLanguageId}\n      onChangeQueryLanguage={onChangeQueryLanguage}\n      content={{ json: result }}\n    />\n  )\n}\n","import React from 'react'\nimport { PANEL_NAMES_LOWERCASE } from '../../constants'\nimport JSONEditorComponent from '../../JSONEditorComponent'\n\nexport default function PanelSchemaPreview({\n  panelId,\n  allPanels,\n  indentation,\n  queryLanguageId,\n  onChangeQueryLanguage\n}) {\n  const selectedPanel = allPanels.find((panel) => panel.panelId === panelId)\n\n  try {\n    return selectedPanel ? (\n      <JSONEditorComponent\n        mode=\"tree\"\n        parser={JSON} // we use the native parser here, LossessJSON is not supported anyway by Ajv\n        readOnly\n        indentation={indentation}\n        mainMenuBar={false}\n        navigationBar={false}\n        queryLanguageId={queryLanguageId}\n        onChangeQueryLanguage={onChangeQueryLanguage}\n        content={selectedPanel.document.content}\n      />\n    ) : (\n      <div className=\"error\">Error: Cannot show preview. Panel with id {panelId} not found.</div>\n    )\n  } catch (err) {\n    return (\n      <div className=\"error\">\n        Error: Cannot show preview. The {PANEL_NAMES_LOWERCASE[panelId]} panel contains a JSON parse\n        error.\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { useAsync } from 'react-async-hook'\nimport { loadDocument } from '../../utils/documentUtils'\nimport './CloudDocumentSchemaPreview.scss'\nimport JSONEditorComponent from '../../JSONEditorComponent'\n\nexport default function CloudDocumentSchemaPreview({\n  compoundKey,\n  indentation,\n  queryLanguageId,\n  onChangeQueryLanguage\n}) {\n  return (\n    <div className=\"cloud-document-schema-preview\">\n      Preview:\n      <div className=\"preview\">\n        {compoundKey ? (\n          <SchemaPreviewContents\n            compoundKey={compoundKey}\n            indentation={indentation}\n            queryLanguageId={queryLanguageId}\n            onChangeQueryLanguage={onChangeQueryLanguage}\n          />\n        ) : (\n          <div className=\"info\">(Select a document)</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction SchemaPreviewContents({\n  compoundKey,\n  indentation,\n  queryLanguageId,\n  onChangeQueryLanguage\n}) {\n  const { loading, result, error } = useAsync(loadDocument, [compoundKey])\n\n  if (error) {\n    return <div className=\"error\">{error.toString()}</div>\n  }\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>\n  }\n\n  try {\n    return (\n      <JSONEditorComponent\n        mode=\"tree\"\n        parser={JSON} // we use the native parser here, LossessJSON is not supported anyway by Ajv\n        readOnly\n        indentation={indentation}\n        mainMenuBar={false}\n        navigationBar={false}\n        queryLanguageId={queryLanguageId}\n        onChangeQueryLanguage={onChangeQueryLanguage}\n        content={result.content}\n      />\n    )\n  } catch (err) {\n    console.error(err)\n    return (\n      <div className=\"error\">\n        Error: Cannot show preview. The selected document contains a JSON parse error.\n      </div>\n    )\n  }\n}\n","import Modal from '../modal'\nimport React, { useRef, useState } from 'react'\nimport './schemaModal.scss'\nimport Toggle from '../../controls/Toggle'\nimport { listRecentFiles } from '../../recentFiles'\nimport { formatDate } from '../../utils/dateUtils'\nimport { isEmpty } from 'lodash-es'\nimport classnames from 'classnames'\nimport { PANEL_NAMES, PANEL_NAMES_LOWERCASE } from '../../constants'\nimport UrlSchemaPreview from './UrlSchemaPreview'\nimport isUrl from 'is-url'\nimport PanelSchemaPreview from './PanelSchemaPreview'\nimport CloudDocumentSchemaPreview from './CloudDocumentSchemaPreview'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCloud } from '@fortawesome/free-solid-svg-icons'\nimport { isCloudDocument } from '../../utils/documentUtils'\nimport { createRoot } from 'react-dom/client'\nimport JSONEditorComponent from '../../JSONEditorComponent'\n\nfunction SchemaModal({\n  initialSchema,\n  indentation,\n  queryLanguageId,\n  onChangeQueryLanguage,\n  panelId,\n  allPanels,\n  onOk,\n  onClose\n}) {\n  const refModal = useRef(null)\n  const [schema, setSchema] = useState(initialSchema || { type: 'NONE' })\n\n  const schemaParser = JSON // we use the native parser here, LossessJSON is not supported anyway by Ajv\n\n  const schemaTypeOptions = [\n    { value: 'NONE', text: 'None' },\n    { value: 'PANEL', text: 'Panel' },\n    { value: 'DOCUMENT', text: 'Document' },\n    { value: 'TEXT', text: 'Text' },\n    { value: 'URL', text: 'Url' }\n  ]\n\n  function close() {\n    refModal.current.close()\n    onClose()\n  }\n\n  function handleCancel() {\n    close()\n  }\n\n  function handleOk() {\n    onOk(cleanSchemaConfig(schema))\n    close()\n  }\n\n  function handleChangeType(type) {\n    const otherPanel = allPanels.find((panel) => panel.panelId !== panelId)\n\n    setSchema({\n      ...schema,\n      type,\n      panelId: schema.panelId === undefined && otherPanel ? otherPanel.panelId : schema.panelId\n    })\n  }\n\n  function handleSelectPanel(panelId) {\n    setSchema({ ...schema, panelId })\n  }\n\n  const recentFiles = listRecentFiles()\n\n  const otherPanel = allPanels.find((panel) => panel.panelId !== panelId)\n\n  return (\n    <Modal ref={refModal} onRequestClose={handleCancel} className=\"schema\">\n      <div className=\"modal modal-schema\">\n        <h1>JSON schema</h1>\n        <p>Configure a JSON schema for the {PANEL_NAMES_LOWERCASE[panelId]} panel:</p>\n        <div className=\"contents\">\n          <Toggle options={schemaTypeOptions} value={schema.type} onChange={handleChangeType} />\n          {schema.type === 'NONE' && <div className=\"config\">No JSON Schema.</div>}\n          {schema.type === 'PANEL' && (\n            <div className=\"config\">\n              {schema.panelId ? (\n                schema.panelId !== panelId ? (\n                  <>\n                    <p>{PANEL_NAMES[schema.panelId]} panel contents will be used as JSON Schema.</p>\n                    <p>Preview:</p>\n                    <div className=\"schema-panel-preview\">\n                      <PanelSchemaPreview\n                        panelId={schema.panelId}\n                        allPanels={allPanels}\n                        parser={schemaParser}\n                        indentation={indentation}\n                        queryLanguageId={queryLanguageId}\n                        onChangeQueryLanguage={onChangeQueryLanguage}\n                      />\n                    </div>\n                  </>\n                ) : (\n                  <div className=\"error\">\n                    <p>\n                      Error: Currently the {PANEL_NAMES_LOWERCASE[panelId]} panel itself is selected\n                      as JSON Schema. This is not possible.\n                    </p>\n                    <p>\n                      <button\n                        className=\"fix-panel\"\n                        onClick={() => handleSelectPanel(otherPanel.panelId)}\n                      >\n                        Select {PANEL_NAMES_LOWERCASE[otherPanel.panelId]} panel\n                      </button>\n                    </p>\n                  </div>\n                )\n              ) : null}\n            </div>\n          )}\n          {schema.type === 'DOCUMENT' && (\n            <div className=\"config cloud-document\">\n              <div className=\"list-column\">\n                Select a document as JSON Schema:\n                <div className=\"recent-files\">\n                  {!isEmpty(recentFiles) ? (\n                    recentFiles.map((file) => {\n                      const className = classnames('modal-button', 'recent-file', {\n                        selected: file.compoundKey === schema.compoundKey\n                      })\n\n                      return (\n                        <button\n                          key={file.compoundKey}\n                          className={className}\n                          title=\"Select this file as JSON Schema\"\n                          onClick={() => setSchema({ ...schema, compoundKey: file.compoundKey })}\n                        >\n                          {isCloudDocument(file.compoundKey) && (\n                            <span title=\"This document is stored in the cloud\">\n                              <FontAwesomeIcon icon={faCloud} />{' '}\n                            </span>\n                          )}\n                          {file.name}\n                          <div className=\"updated\">\n                            Last modified: {file.updated ? formatDate(file.updated) : '(unknown)'}\n                          </div>\n                        </button>\n                      )\n                    })\n                  ) : (\n                    <div className=\"no-files\">(no recent files)</div>\n                  )}\n                </div>\n              </div>\n              <div className=\"preview-column\">\n                <CloudDocumentSchemaPreview\n                  compoundKey={schema.compoundKey}\n                  queryLanguageId={queryLanguageId}\n                  onChangeQueryLanguage={onChangeQueryLanguage}\n                />\n              </div>\n            </div>\n          )}\n          {schema.type === 'TEXT' && (\n            <div className=\"config config-jsoneditor\">\n              <p>Enter the contents of the JSON Schema:</p>\n              <JSONEditorComponent\n                className=\"text-schema\"\n                indentation={indentation}\n                queryLanguageId={queryLanguageId}\n                onChangeQueryLanguage={onChangeQueryLanguage}\n                content={schema.content ? schema.content : { json: {} }}\n                onChange={(content) => {\n                  setSchema({ ...schema, content })\n                }}\n              />\n            </div>\n          )}\n          {schema.type === 'URL' && (\n            <div className=\"config\">\n              <p>Specify the url of the JSON Schema.</p>\n              <p>\n                The url must be public: it must not require authentication and needs to have CORS\n                enabled.\n              </p>\n              <input\n                className=\"regular schema-url\"\n                type=\"text\"\n                value={schema.url || ''}\n                onChange={(event) => setSchema({ ...schema, url: event.target.value })}\n              />\n              <div>\n                <p>Preview:</p>\n                <div className=\"schema-url-preview\">\n                  {schema.url && isUrl(schema.url) ? (\n                    <UrlSchemaPreview\n                      url={schema.url}\n                      indentation={indentation}\n                      queryLanguageId={queryLanguageId}\n                      onChangeQueryLanguage={onChangeQueryLanguage}\n                    />\n                  ) : (\n                    <div className=\"info\">(enter a valid url)</div>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"modal-action-menu\">\n          <button className=\"modal-button\" onClick={handleCancel}>\n            Cancel\n          </button>\n          <button className=\"modal-button primary\" onClick={handleOk}>\n            Ok\n          </button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\n/**\n * Show a modal to open files\n * @param {Object} props    Object with parameters. Available parameters:\n * @property {'LEFT_PANEL' | 'RIGHT_PANEL'} panelId\n * @property {Array.<{id: string, content: Content}>} allPanels\n * @property {Schema} initialSchema\n * @property {Schema} indentation\n * @property {string} queryLanguageId\n * @property {(queryLanguageId: string) => void} onChangeQueryLanguage\n * @property {function(schema: Schema)} onOk\n * // TODO: document options\n */\nexport default function schemaModal(props) {\n  const container = document.createElement('div')\n  document.body.appendChild(container)\n\n  function handleClose() {\n    document.body.removeChild(container)\n  }\n\n  createRoot(container).render(\n    <SchemaModal\n      panelId={props.panelId}\n      allPanels={props.allPanels}\n      initialSchema={props.initialSchema}\n      indentation={props.indentation}\n      queryLanguageId={props.queryLanguageId}\n      onChangeQueryLanguage={props.onChangeQueryLanguage}\n      onOk={props.onOk}\n      onClose={handleClose}\n    />\n  )\n}\n\n/**\n * Remove all but the necessary fields for the given schema type\n * @param {SchemaConfig} schemaConfig\n * @return {SchemaConfig} schemaConfig\n */\nfunction cleanSchemaConfig(schemaConfig) {\n  const { type, url, compoundKey, content, panelId } = schemaConfig\n\n  switch (type) {\n    case 'NONE':\n      return { type }\n\n    case 'URL':\n      return { type, url }\n\n    case 'DOCUMENT':\n      return { type, compoundKey }\n\n    case 'TEXT':\n      return { type, content }\n\n    case 'PANEL':\n      return { type, panelId }\n\n    default:\n      console.error('Unknown type of schemaConfig', schemaConfig)\n      return schemaConfig\n  }\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\n/**\n * Source of inspiration: https://github.com/ardsh/use-cancelable-timeout\n */\nexport default function useTimeout() {\n  const timerRef = useRef(null)\n\n  const clearTimeout = useCallback(function () {\n    if (timerRef.current != null) {\n      window.clearTimeout(timerRef.current)\n      timerRef.current = null\n    }\n  }, [])\n\n  const setTimeout = useCallback(function (callback, delay) {\n    // first clear any previous timer\n    if (timerRef.current != null) {\n      window.clearTimeout(timerRef.current)\n    }\n\n    timerRef.current = window.setTimeout(callback, delay)\n  }, [])\n\n  useEffect(() => {\n    return () => {\n      clearTimeout()\n    }\n  }, [clearTimeout])\n\n  return [setTimeout, clearTimeout]\n}\n","import { faCopy } from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport useTimeout from '../hooks/useTimeout'\nimport './CopyToClipboardButton.scss'\nimport { createDebug } from '../utils/debug'\n\nconst debug = createDebug('jsoneditoronline:CopyToClipboardButton')\n\nconst COPIED_DURATION = 1000 // ms\n\nexport default function CopyToClipboardButton({ data, text, title, copiedText }) {\n  const [copied, setCopied] = useState(false)\n  const [setToggleTimeout] = useTimeout()\n\n  function handleCopy() {\n    debug('Text copied to clipboard', { data })\n    setCopied(true)\n    setToggleTimeout(() => setCopied(false), COPIED_DURATION)\n  }\n\n  return (\n    <CopyToClipboard\n      text={data}\n      onCopy={handleCopy}\n      className=\"modal-button primary copy-clipboard \"\n    >\n      <div className=\"modal-button primary\">\n        <FontAwesomeIcon icon={faCopy} title={title} />\n        {copied && copiedText ? ` ${copiedText}` : text ? ` ${text}` : undefined}\n      </div>\n    </CopyToClipboard>\n  )\n}\n","import React from 'react'\nimport Modal from './modal'\nimport './shareModal.scss'\nimport { createSharableUrl, isCloudDocument, isLocalDocument } from '../utils/documentUtils'\nimport CopyToClipboardButton from '../controls/CopyToClipboardButton'\nimport { createRoot } from 'react-dom/client'\n\nfunction ShareModal({ document, compoundKey, onClose }) {\n  const name = document.name ? `document \"${document.name}\"` : ''\n\n  return (\n    <Modal onRequestClose={onClose} className=\"share\">\n      <div className=\"modal modal-share\">\n        <h1>Share {name}</h1>\n        {renderUrl(compoundKey)}\n        <div className=\"modal-action-menu\">\n          <button className=\"modal-button\" onClick={onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\n/**\n * @param {CompoundKey} compoundKey\n */\nfunction renderUrl(compoundKey) {\n  if (isLocalDocument(compoundKey)) {\n    return (\n      <div>\n        <p>This document is stored locally in your browser and cannot be shared.</p>\n        <p>\n          To share this document, save it in the cloud first via menu &quot;Save&quot;, &quot;Save\n          to cloud&quot;.\n        </p>\n      </div>\n    )\n  }\n\n  if (isCloudDocument(compoundKey)) {\n    const url = createSharableUrl(compoundKey)\n\n    return (\n      <div className=\"share-contents\">\n        <input readOnly value={url} className=\"url-contents\" />\n        <CopyToClipboardButton\n          data={url}\n          title=\"Copy url to clipboard\"\n          copiedText=\"Copied!\"\n          className=\"modal-button primary\"\n        />\n      </div>\n    )\n  }\n\n  return <div>Cannot create a sharable url. Please save the document in the cloud first.</div>\n}\n\n/**\n * Show a modal with sharing options\n * @param {Object} props    Object with parameters. Available parameters:\n * @property {Document} document\n * @property {CompoundKey} compoundKey\n */\nexport default function shareModal(props) {\n  const container = document.createElement('div')\n  document.body.appendChild(container)\n\n  function handleClose() {\n    document.body.removeChild(container)\n  }\n\n  createRoot(container).render(<ShareModal {...props} onClose={handleClose} />)\n}\n","import { isObjectOrArray } from 'svelte-jsoneditor/utils/typeUtils' // do not use vanilla-jsoneditor to allow code splitting\n\n/**\n * Flatten nested properties of an object\n * Source: https://stackoverflow.com/a/56253298/1262753\n * @param {Object} object\n * @param {string} [separator='_']\n * @returns {Object}\n */\nexport function flattenObject(object: { [key: string]: unknown }, separator = '_') {\n  const flat: { [key: string]: unknown } = {}\n\n  function recurse(object: { [key: string]: unknown }, parentPath: string) {\n    for (const key in object) {\n      const path = parentPath ? parentPath + separator + key : key\n\n      if (isObjectOrArray(object[key])) {\n        recurse(object[key] as { [key: string]: unknown }, path)\n      } else {\n        flat[path] = object[key]\n      }\n    }\n  }\n\n  recurse(object, '')\n\n  return flat\n}\n","import { Parser } from 'json2csv'\nimport { isSafeNumber, JSONValue } from 'lossless-json'\nimport { flattenObject } from './objectUtils'\n\n/**\n * @param {JSON} json\n * @param {{header: boolean, flatten: boolean}} options\n * @returns {string}\n */\nexport function jsonToCsv(json: JSONValue, options: { header: boolean; flatten: boolean }): string {\n  const header = typeof options.header === 'boolean' ? options.header : true\n\n  if (Array.isArray(json)) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const processedJson = options.flatten ? json.map((item) => flattenObject(item)) : json\n    return new Parser({ header }).parse(processedJson)\n  } else {\n    // object or primitive\n    return (\n      new Parser({ header })\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        .parse(options.flatten ? flattenObject(json) : json)\n    )\n  }\n}\n\nexport function findUnsafeNumber(text: string, truncateCharacters = Infinity): string | undefined {\n  const textTruncated = text.substring(0, truncateCharacters)\n  const matches = textTruncated.match(JSON_NUMBER_REGEX)\n  if (!matches) {\n    return undefined\n  }\n\n  // FIXME: if a value is found, verify whether it is not a value inside a string.\n  //  to check: a number is surrounded by optional whitespace, and then [  or , before, and , or ] or } after\n\n  return matches.find((value: string) => !isSafeNumber(value)) || undefined\n}\n\nexport function containsUnsafeNumbers(text: string, truncateCharacters = Infinity): boolean {\n  return findUnsafeNumber(text, truncateCharacters) !== undefined\n}\n\nconst JSON_NUMBER_REGEX = /-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g\n","import {\n  faCircleNotch,\n  faExclamationTriangle,\n  faSave,\n  faTable\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { useEffect, useState } from 'react'\nimport './CSVExportModal.scss'\nimport Modal from './modal'\nimport { parseContent } from '../utils/documentUtils'\nimport CopyToClipboardButton from '../controls/CopyToClipboardButton'\nimport { addExtensionIfNeeded, saveFileViaAnchor } from '../utils/fileUtils'\nimport { notifyError } from '../utils/modalUtils'\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport { truncate } from 'lodash-es'\nimport { MAX_PREVIEW_CHARACTERS } from '../constants'\nimport { jsonToCsv } from '../utils/jsonUtils'\nimport useTimeout from '../hooks/useTimeout'\nimport classnames from 'classnames'\nimport { memoizeLastArguments } from '../utils/memoizationUtils.js'\nimport { transform } from 'immutable-json-patch'\nimport { createDebug } from '../utils/debug'\n\nconst debug = createDebug('jsoneditoronline:CSVExportModal')\n\nconst defaultOptions = {\n  header: true,\n  flatten: true\n}\n\nexport default function CSVExportModal({ parser, document, onClose }) {\n  const content = document.content\n\n  const [options, setOptions] = useLocalStorage('csvExportOptions', defaultOptions)\n  const [name, setName] = useState(document.name || 'document')\n  const [loading, setLoading] = useState(true)\n  const [preview, setPreview] = useState({\n    content: undefined,\n    json: undefined,\n    csv: undefined,\n    csvTruncated: undefined,\n    error: undefined\n  })\n  const [setLoadingTimeout] = useTimeout()\n\n  useEffect(() => {\n    setLoadingTimeout(() => {\n      setPreview(createPreview(content, parser, options))\n      setLoading(false)\n    })\n  }, [])\n\n  function applyOptions(newOptions) {\n    debug('applyOptions', newOptions)\n\n    const updatedOptions = {\n      ...options,\n      ...newOptions\n    }\n\n    setOptions(updatedOptions)\n    setLoading(true)\n\n    setLoadingTimeout(() => {\n      setPreview(createPreview(content, parser, updatedOptions))\n      setLoading(false)\n    })\n  }\n\n  function handleSave() {\n    try {\n      const filename = addExtensionIfNeeded(name, '.csv')\n\n      saveFileViaAnchor(filename, preview.csv)\n\n      onClose()\n    } catch (error) {\n      console.error(error)\n      notifyError(error)\n    }\n  }\n\n  return (\n    <Modal onRequestClose={onClose} className=\"csv-export\">\n      <div className=\"modal modal-csv-export\">\n        <div className=\"modal-header\">\n          <h1>\n            <FontAwesomeIcon icon={faTable} /> CSV Export\n          </h1>\n        </div>\n\n        <div className=\"modal-contents\">\n          <div className=\"modal-text\">Enter a name for the CSV file:</div>\n          <input\n            type=\"text\"\n            className=\"regular\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n\n          <div className=\"modal-text\">\n            Options:\n            <label title=\"When selected, the first line of the CSV will be a header with the column names\">\n              <input\n                type=\"checkbox\"\n                checked={options.header === true}\n                onChange={(event) => {\n                  applyOptions({ header: event.target.checked })\n                }}\n              />{' '}\n              Header row\n            </label>\n            <label title=\"When selected, an array containing objects with nested properties will be flattened\">\n              <input\n                type=\"checkbox\"\n                checked={options.flatten}\n                onChange={(event) => {\n                  applyOptions({ flatten: event.target.checked })\n                }}\n              />{' '}\n              Flatten nested properties\n            </label>\n          </div>\n\n          <div className={classnames('preview-area', { loading })}>\n            <textarea\n              readOnly\n              wrap={!preview.error ? 'off' : ''}\n              className={classnames('regular', 'csv-preview', { error: !!preview.error })}\n              value={\n                loading\n                  ? ''\n                  : preview.error\n                  ? `Error: could not parse JSON. Please close the CSV Export modal, fix your JSON document, then export to CSV again.`\n                  : preview.csvTruncated || ''\n              }\n            />\n\n            {loading && (\n              <div className=\"overlay\">\n                <div className=\"loading\">\n                  <FontAwesomeIcon icon={faCircleNotch} spin /> loading...\n                </div>\n              </div>\n            )}\n\n            {!loading && preview.csvTruncated !== preview.csv && (\n              <div className=\"truncated-overlay\">\n                <div className=\"truncated\">\n                  <FontAwesomeIcon icon={faExclamationTriangle} /> Preview is truncated\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"modal-action-menu\">\n          <CopyToClipboardButton\n            data={preview.csv}\n            text=\"Copy to clipboard\"\n            copiedText=\"Copied to clipboard!\"\n            title=\"Copy CSV data to clipboard\"\n            className=\"modal-button primary\"\n          />\n          <button className=\"modal-button primary\" onClick={handleSave}>\n            <FontAwesomeIcon icon={faSave} /> Save to disk\n          </button>\n          <button className=\"modal-button\" onClick={() => onClose()}>\n            Close\n          </button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\n/**\n * @param {JSON} parser\n * @param {Content} content\n * @returns {{json: JSON, error: undefined} | {json: undefined, error: Error}}\n */\nfunction tryParseContent(content, parser) {\n  try {\n    const json = parseContent(content, parser)\n    return {\n      json,\n      error: undefined\n    }\n  } catch (error) {\n    return {\n      json: undefined,\n      error\n    }\n  }\n}\n\nconst tryParseContentMemoized = memoizeLastArguments(tryParseContent)\n\nfunction createPreview(content, parser, options) {\n  try {\n    debug('createPreview')\n    console.time('parse')\n    const { json, error } = tryParseContentMemoized(content, parser)\n    console.timeEnd('parse')\n\n    if (error) {\n      return {\n        content,\n        json: undefined,\n        csv: undefined,\n        csvTruncated: undefined,\n        error\n      }\n    }\n\n    console.time('to csv')\n    const csv = jsonToCsv(ensureCSVSafeJSON(json), options)\n    console.timeEnd('to csv')\n\n    const csvTruncated =\n      typeof csv === 'string'\n        ? truncate(csv, { length: MAX_PREVIEW_CHARACTERS, separator: '\\n', omission: '\\n...' })\n        : undefined\n\n    return {\n      content,\n      json,\n      csv,\n      csvTruncated,\n      error: undefined\n    }\n  } catch (error) {\n    return {\n      content,\n      json: undefined,\n      csv: undefined,\n      csvTruncated: undefined,\n      error\n    }\n  }\n}\n\n// If needed, convert LosslessNumbers to strings before transforming to JSON\n// This is possible because strings and numbers are both written as a value with double quotes\nfunction ensureCSVSafeJSON(json, parser) {\n  return parser !== JSON\n    ? transform(json, (entry) => {\n        return entry && entry.isLosslessNumber ? entry.toString() : entry\n      })\n    : json\n}\n","import { faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport classnames from 'classnames'\nimport React, { useEffect, useRef, useState } from 'react'\nimport type { Content } from 'svelte-jsoneditor'\nimport { LARGE_DOCUMENT_SIZE } from '../constants.js'\nimport StyledReactTooltip from '../controls/StyledReactTooltip'\nimport { ParserId } from '../enums'\nimport JSONEditorComponent from '../JSONEditorComponent'\nimport type { Configuration } from '../types'\nimport { createDebug } from '../utils/debug'\nimport { tryFormatContent } from '../utils/documentUtils'\nimport { formatSize } from '../utils/fileUtils'\nimport { isValidFontSize, normalizeFontSize } from '../utils/fontUtils'\nimport { getJSONParser } from '../utils/getJSONParser'\nimport './ConfigurationModal.scss'\nimport Modal from './modal.js'\n\nconst debug = createDebug('jsoneditoronline:ConfigurationModal')\n\nconst previewContent: Content = {\n  text: `{\n  \"text\": \"Preview configuration settings\",\n  \"boolean\": true,\n  \"color\": \"red\",\n  \"unicode\": \"😀\",\n  \"multiline\": \"line1,\\\\nline2,\\\\nline3\",\n  \"number\": 4.0,\n  \"long\": 18800000000000000123\n}\n`\n}\n\nconst previewArrayContent: Content = {\n  json: [\n    {\n      id: 1017,\n      name: 'Joe',\n      address: {\n        city: 'New York',\n        street: 'Victor Plains'\n      },\n      scores: [8.0, 7.2, 6.7]\n    },\n    {\n      id: 1029,\n      name: 'Sarah',\n      address: {\n        city: 'Manhattan',\n        street: 'Skiles Walks'\n      },\n      scores: [6.1, 6.2, 6.0]\n    },\n    {\n      id: 1022,\n      name: 'Mike',\n      address: {\n        city: 'South Christy',\n        street: 'Norberto Crossing'\n      },\n      scores: [7.1, 7.2]\n    }\n  ]\n}\n\ninterface IndentationModalProps {\n  config: Configuration\n  onOk: (updatedConfig: Configuration) => void\n  onClose: () => void\n}\n\ninterface ValidationErrors {\n  fontSize: string | undefined\n  indentation: string | undefined\n}\n\nexport default function ConfigurationModal({ config, onClose, onOk }: IndentationModalProps) {\n  const modalRef = useRef<Modal>(null)\n  const fontSizeRef = useRef<HTMLInputElement>(null)\n  const previewContainerRef = useRef<HTMLInputElement>(null)\n  const [previewMode, setPreviewMode] = useState('tree')\n  const [fontSize, setFontSize] = useState(config.fontSize)\n  const [useTab, setUseTab] = useState<boolean>(config.indentation === '\\t') // if true, use tab, otherwise use spaces\n  const [indentationValue, setIndentationValue] = useState<string>(\n    config.indentation === '\\t'\n      ? String(config.tabSize)\n      : typeof config.indentation === 'number'\n      ? String(config.indentation) // for example 4\n      : String(config.indentation.length) // for example '    '. This notation is not used, but just in case...\n  )\n  const [escapeControlCharacters, setEscapeControlCharacters] = useState(\n    config.escapeControlCharacters\n  )\n  const [escapeUnicodeCharacters, setEscapeUnicodeCharacters] = useState(\n    config.escapeUnicodeCharacters\n  )\n  const [flattenColumns, setFlattenColumns] = useState(config.flattenColumns)\n  const [parserId, setParserId] = useState(config.parserId)\n  const [validate, setValidate] = useState(false)\n  const [content, setContent] = useState(previewContent)\n\n  const indentationNumber = Number(indentationValue)\n  const indentation = useTab ? '\\t' : indentationNumber\n  const tabSize = indentationNumber\n  const updatedConfig = {\n    fontSize: normalizeFontSize(fontSize),\n    indentation,\n    tabSize,\n    escapeControlCharacters,\n    escapeUnicodeCharacters,\n    flattenColumns,\n    parserId\n  }\n  const validationErrors = validate ? validateConfig(updatedConfig, indentationValue) : undefined\n  const parser = getJSONParser(parserId, content)\n\n  useEffect(() => {\n    if (fontSizeRef.current) {\n      fontSizeRef.current.select()\n    }\n  }, [])\n\n  function applyFontSize(newFontSize: string) {\n    setFontSize(newFontSize)\n\n    if (previewContainerRef.current) {\n      previewContainerRef.current.style.setProperty(\n        '--jse-font-size-mono',\n        getPreviewFontSize(normalizeFontSize(newFontSize), config.fontSize)\n      )\n    }\n  }\n\n  function applyFormatting(newUseTab: boolean, newIndentationValue: string) {\n    const newIndentation = getPreviewIndentation(newUseTab, newIndentationValue, config.indentation)\n    setContent(tryFormatContent(content, parser, newIndentation))\n  }\n\n  function applyPreviewMode(mode: string) {\n    const activeElement = document.activeElement\n\n    setPreviewMode(mode)\n\n    if (mode === 'table') {\n      setContent(previewArrayContent)\n    } else {\n      setContent(previewContent)\n    }\n\n    // after switching the Preview to text mode, the editor grabs focus, but we don't want that.\n    setTimeout(() => {\n      if (activeElement) {\n        ;(activeElement as HTMLInputElement).focus()\n      }\n    })\n  }\n\n  function applyUseTab(newUseTab: boolean) {\n    applyPreviewMode('text')\n    setUseTab(newUseTab)\n    applyFormatting(newUseTab, indentationValue)\n  }\n\n  function applyIndentationValue(newIndentationValue: string) {\n    applyPreviewMode('text')\n    setIndentationValue(newIndentationValue)\n    applyFormatting(useTab, newIndentationValue)\n  }\n\n  function applyEscapeControlCharacters(newEscapeControlCharacters: boolean) {\n    applyPreviewMode('tree')\n    setEscapeControlCharacters(newEscapeControlCharacters)\n  }\n\n  function applyEscapeUnicodeCharacters(newEscapeUnicodeCharacters: boolean) {\n    if (previewMode === 'table') {\n      applyPreviewMode('tree')\n    } else {\n      setContent(previewContent)\n    }\n    setEscapeUnicodeCharacters(newEscapeUnicodeCharacters)\n  }\n\n  function applyFlattenColumns(newFlattenColumns: boolean) {\n    applyPreviewMode('table')\n    setFlattenColumns(newFlattenColumns)\n  }\n\n  function applyParserId(parserId: ParserId) {\n    applyPreviewMode('tree')\n    setParserId(parserId)\n  }\n\n  function handleOk(): boolean {\n    setValidate(true)\n\n    const hasValidationErrors = !!validateConfig(updatedConfig, indentationValue)\n    if (hasValidationErrors) {\n      return false\n    }\n\n    onOk(updatedConfig)\n\n    close()\n\n    return true\n  }\n\n  function handleCancel() {\n    close()\n  }\n\n  function close() {\n    if (modalRef.current) {\n      modalRef.current.close()\n    }\n\n    onClose()\n  }\n\n  function handleSaveAndReload() {\n    debug('save and reload')\n    const closed = handleOk()\n    if (closed) {\n      window.location.reload()\n    }\n  }\n\n  return (\n    <Modal ref={modalRef} className=\"configuration\" onRequestClose={handleCancel}>\n      <div className=\"modal modal-configuration\">\n        <StyledReactTooltip />\n        <h1>Configuration</h1>\n\n        <div className=\"columns\">\n          <div className=\"column left\">\n            <form onSubmit={handleOk}>\n              <h2>Font size</h2>\n              <div className=\"modal-text\">\n                Configure the font size, for example <code>&quot;14px&quot;</code> (default) or{' '}\n                <code>&quot;12pt&quot;</code>.\n              </div>\n\n              <table>\n                <tbody>\n                  <tr>\n                    <td>Font size:</td>\n                    <td>\n                      <input\n                        ref={fontSizeRef}\n                        type=\"text\"\n                        value={fontSize}\n                        onChange={(event) => applyFontSize(event.target.value)}\n                        className={classnames('fontSize', 'regular', {\n                          error: validationErrors?.fontSize\n                        })}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              {validationErrors?.fontSize && (\n                <div className=\"error-message\">{validationErrors.fontSize}</div>\n              )}\n\n              <h2>Indentation</h2>\n\n              <div className=\"modal-text\">\n                Indentation used in text mode and when copying or saving a document.\n              </div>\n              <table>\n                <tbody>\n                  <tr>\n                    <td>Type of indentation:</td>\n                    <td className=\"indentation-types\">\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name=\"useTab\"\n                          value=\"spaces\"\n                          checked={!useTab}\n                          onChange={() => applyUseTab(false)}\n                        />{' '}\n                        Spaces\n                      </label>\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name=\"useTab\"\n                          value=\"tabs\"\n                          checked={useTab}\n                          onChange={() => applyUseTab(true)}\n                        />{' '}\n                        Tabs\n                      </label>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>{useTab ? 'Tab size: ' : 'Number of spaces: '}</td>\n                    <td>\n                      <input\n                        type=\"text\"\n                        className={classnames('indentation', 'regular', {\n                          error: validationErrors?.indentation\n                        })}\n                        value={indentationValue}\n                        onChange={(event) => applyIndentationValue(event.target.value)}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              {validationErrors?.indentation && (\n                <div className=\"error-message\">{validationErrors.indentation}</div>\n              )}\n\n              <h2>Escape characters</h2>\n\n              <table>\n                <tbody>\n                  <tr>\n                    <td>\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          checked={escapeControlCharacters}\n                          onChange={(event) => applyEscapeControlCharacters(event.target.checked)}\n                        />{' '}\n                        Escape control characters like newline <code>&quot;\\n&quot;</code> and tab{' '}\n                        <code>&quot;\\t&quot;</code>{' '}\n                        <div\n                          className=\"explanation\"\n                          data-tip=\"Escaping control characters is only applicable to tree mode.\"\n                        >\n                          <FontAwesomeIcon icon={faInfoCircle} />\n                        </div>\n                      </label>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          checked={escapeUnicodeCharacters}\n                          onChange={(event) => applyEscapeUnicodeCharacters(event.target.checked)}\n                        />{' '}\n                        Escape unicode characters like smilies {'\\uD83D\\uDE01'}\n                      </label>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <h2>Table view</h2>\n\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={flattenColumns}\n                  onChange={(event) => applyFlattenColumns(event.target.checked)}\n                />{' '}\n                Flatten nested object properties into separate columns\n              </label>\n\n              <h2>Parser</h2>\n\n              <div className=\"modal-text\">Select a JSON parser:</div>\n\n              <div>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"parserId\"\n                    value=\"auto\"\n                    checked={parserId === ParserId.auto}\n                    onChange={() => applyParserId(ParserId.auto)}\n                  />{' '}\n                  Auto select{' '}\n                  <div\n                    className=\"explanation\"\n                    data-tip={\n                      `Selects the Lossless JSON Parser for documents up to ${formatSize(\n                        LARGE_DOCUMENT_SIZE\n                      )}, ` + ' and selects the fast Native JSON Parser for larger documents.'\n                    }\n                  >\n                    <FontAwesomeIcon icon={faInfoCircle} />\n                  </div>\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"parserId\"\n                    value=\"native\"\n                    checked={parserId === ParserId.native}\n                    onChange={() => applyParserId(ParserId.native)}\n                  />{' '}\n                  Native JSON Parser{' '}\n                  <div\n                    className=\"explanation\"\n                    data-tip=\"The Native JSON parser uses the browser's built-in JSON parser. This parser is very fast, but cannot handle long numbers.\"\n                  >\n                    <FontAwesomeIcon icon={faInfoCircle} />\n                  </div>\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"parserId\"\n                    value=\"lossless\"\n                    checked={parserId === ParserId.lossless}\n                    onChange={() => applyParserId(ParserId.lossless)}\n                  />{' '}\n                  Lossless JSON Parser{' '}\n                  <div\n                    className=\"explanation\"\n                    data-tip={\n                      'The Lossless JSON parser can handle long numbers and maintains the formatting of numbers. ' +\n                      `The parser is slower than the Native JSON parser, which is noticeable for documents larger than ${formatSize(\n                        LARGE_DOCUMENT_SIZE\n                      )}.`\n                    }\n                  >\n                    <FontAwesomeIcon icon={faInfoCircle} />\n                  </div>\n                </label>\n              </div>\n\n              {parserId !== config.parserId && (\n                <div className=\"reload-warning\">\n                  <div className=\"reload-message\">\n                    The selected parser will be used after reloading the web application.\n                  </div>\n                  <div>\n                    <button className=\"modal-button primary\" onClick={handleSaveAndReload}>\n                      Save config and reload now\n                    </button>\n                  </div>\n                </div>\n              )}\n            </form>\n          </div>\n          <div className=\"column right\">\n            <h2>Preview</h2>\n\n            <div className=\"preview-container\" ref={previewContainerRef}>\n              <JSONEditorComponent\n                key={parserId}\n                mode={previewMode}\n                content={content}\n                onChange={setContent}\n                onChangeMode={setPreviewMode}\n                flattenColumns={flattenColumns}\n                parser={parser}\n                indentation={getPreviewIndentation(useTab, indentationValue, config.indentation)}\n                tabSize={getPreviewTabSize(indentationValue, config.tabSize)}\n                escapeControlCharacters={escapeControlCharacters}\n                escapeUnicodeCharacters={escapeUnicodeCharacters}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-action-menu\">\n          <button className=\"modal-button\" onClick={handleCancel}>\n            Cancel\n          </button>\n          <button className=\"modal-button primary\" onClick={handleOk}>\n            Ok\n          </button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nfunction isValidIndentationValue(value: string | number) {\n  return isPositiveIntegerNumber(Number(value))\n}\n\nfunction isPositiveIntegerNumber(value: number): boolean {\n  return !isNaN(value) && isFinite(value) && value > 0 && Math.round(value) === value\n}\n\nfunction getPreviewIndentation(\n  useTab: boolean,\n  indentationValue: string,\n  defaultIndentation: string | number\n): string | number {\n  const indentationNumber = Number(indentationValue)\n\n  return useTab\n    ? '\\t'\n    : isValidIndentationValue(indentationNumber)\n    ? indentationNumber\n    : defaultIndentation // fallback on the default\n}\n\nfunction getPreviewTabSize(indentationValue: string, defaultTabSize: number): number {\n  const indentationNumber = Number(indentationValue)\n\n  return isValidIndentationValue(indentationNumber) ? indentationNumber : defaultTabSize // fallback on the default\n}\n\nfunction getPreviewFontSize(fontSize: string, defaultFontSize: string): string {\n  return isValidFontSize(fontSize) ? fontSize : defaultFontSize\n}\n\nfunction validateConfig(\n  configuration: Configuration,\n  indentationValue: string\n): ValidationErrors | undefined {\n  const errors: ValidationErrors = {\n    fontSize: undefined,\n    indentation: undefined\n  }\n\n  // validate fontSize input field\n  if (!isValidFontSize(configuration.fontSize)) {\n    errors.fontSize =\n      'Error: invalid font size. ' +\n      'Must be an integer number between 10 and 99 with an optional suffix \"px\" or \"pt\".'\n  }\n\n  // validate indentation input field\n  if (!isValidIndentationValue(indentationValue)) {\n    errors.indentation = 'Error: value must be a positive integer number'\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return Object.keys(errors).some((key) => errors[key] !== undefined) ? errors : undefined\n}\n","import { PROXY_URL_BASE } from '../constants'\n\nexport function toProxyUrl(url) {\n  return PROXY_URL_BASE + encodeURIComponent(url)\n}\n\nexport function isProxyUrl(proxyUrl) {\n  return typeof proxyUrl === 'string' && proxyUrl.startsWith(PROXY_URL_BASE)\n}\n\nexport function fromProxyUrl(proxyUrl) {\n  return isProxyUrl(proxyUrl)\n    ? decodeURIComponent(proxyUrl.substring(PROXY_URL_BASE.length))\n    : proxyUrl\n}\n","import { faSave as faSaveRegular } from '@fortawesome/free-regular-svg-icons'\nimport {\n  faCaretDown,\n  faCheck,\n  faCircleNotch,\n  faCloud,\n  faCog,\n  faCopy,\n  faEdit,\n  faExclamationTriangle,\n  faFile,\n  faFolderOpen,\n  faGear,\n  faInfo,\n  faLaptop,\n  faLink,\n  faMaximize,\n  faMinimize,\n  faSave,\n  faShareAlt,\n  faTable,\n  faTimes\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport classnames from 'classnames'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { FileDrop } from 'react-file-drop'\nimport { Formatting, FORMATTING_OPTIONS } from './constants.js'\nimport useSchema from './hooks/useSchema'\nimport './JSONEditorPanel.scss'\nimport LoadingError from './LoadingError.jsx'\nimport confirm from './modal/confirm'\nimport documentPropertiesModal from './modal/documentPropertiesModal'\nimport openModal from './modal/openModal'\nimport prompt, { Prompt } from './modal/prompt'\nimport schemaModal from './modal/schema/schemaModal'\nimport shareModal from './modal/shareModal'\nimport { isCloudDocument, stringifyContent } from './utils/documentUtils'\nimport { notifyError, notifySuccess } from './utils/modalUtils.js'\nimport CSVExportModal from './modal/CSVExportModal'\nimport ConfigurationModal from './modal/ConfigurationModal'\nimport { fromProxyUrl, isProxyUrl, toProxyUrl } from './utils/proxyUrl'\nimport JSONEditorComponent from './JSONEditorComponent'\nimport useDimensions from 'react-cool-dimensions'\nimport StyledReactTooltip from './controls/StyledReactTooltip'\nimport { createDebug } from './utils/debug'\nimport { onEscape } from 'vanilla-jsoneditor' // important to pick this from vanilla-jsoneditor and not svelte-jsoneditor: it has a global state\n\nconst debug = createDebug('jsoneditoronline:JSONEditorPanel')\n\nconst EMPTY_CONTENT = { json: '' }\nconst MENU_BUTTONS_TEXT_WIDTH = 608 // px\nconst MENU_BUTTONS_ICON_WIDTH = 291 // px\nconst UNSAVED_CHANGES_TEXT_WITH = 170 // px\nconst UNSAVED_CHANGES_ICON_WITH = 40 // px\n\nexport default function JSONEditorPanel({\n  panelId,\n  jsonEditorRef,\n  setJsonEditorRef,\n  mode,\n  setMode,\n  focus,\n  setFocus,\n  loading,\n  error,\n  localStorageError,\n  unsavedChanges,\n  document,\n  compoundKey,\n  diff,\n  parser,\n  indentation,\n  setIndentation,\n  parserId,\n  setParserId,\n  tabSize,\n  setTabSize,\n  fontSize,\n  setFontSize,\n  formattingOnSave,\n  setFormattingOnSave,\n  escapeControlCharacters,\n  setEscapeControlCharacters,\n  escapeUnicodeCharacters,\n  setEscapeUnicodeCharacters,\n  flattenColumns,\n  setFlattenColumns,\n  updateDocument,\n  newDocument,\n  updateDocumentProperties,\n  renameDocument,\n  loadDocument,\n  loadFromDisk,\n  loadFromUrl,\n  saveToCloud,\n  saveToDisk,\n  saveToUrl,\n  saveChanges,\n  closeAndDeleteDocument,\n  queryLanguageId,\n  onChangeQueryLanguage,\n  allPanels // for useSchema\n}) {\n  const [showCSVExportModal, setShowCSVExportModal] = useState(false)\n  const [showConfigurationModal, setShowConfigurationModal] = useState(false)\n  const [showOpenUrlPrompt, setShowOpenUrlPrompt] = useState(false)\n  const [showFullScreen, setShowFullScreen] = useState(false)\n  const refSelectFile = useRef(null)\n  const jsonEditorRefCopy = useRef(null)\n  const escapeFullScreenHandler = useRef(null)\n  const schema = useSchema(document.schema, panelId, allPanels)\n  const { observe: observePanel, width: menuWidth } = useDimensions()\n  const { observe: observeDocumentDetails, width: documentTitleWidth } = useDimensions()\n\n  const content = document ? document.content : EMPTY_CONTENT\n\n  const remainingWidth = menuWidth - documentTitleWidth\n  const showButtonsText = remainingWidth - UNSAVED_CHANGES_ICON_WITH > MENU_BUTTONS_TEXT_WIDTH\n  const showChangesText =\n    remainingWidth - (showButtonsText ? MENU_BUTTONS_TEXT_WIDTH : MENU_BUTTONS_ICON_WIDTH) >\n    UNSAVED_CHANGES_TEXT_WITH\n  const wrapMenu = remainingWidth - UNSAVED_CHANGES_ICON_WITH - MENU_BUTTONS_ICON_WIDTH < 0\n  const showChanges = unsavedChanges && !localStorageError\n\n  const onNew = () => {\n    newDocument()\n  }\n\n  const onRename = () => {\n    prompt({\n      title: 'Rename',\n      text: 'Enter a new name for the document:',\n      value: document.name || 'New document',\n      onOk: renameDocument\n    })\n  }\n\n  const onOpen = useCallback(async () => {\n    openModal({\n      onOpen: async (compoundKey) => {\n        debug('onOpen', { compoundKey })\n        await loadDocument(compoundKey)\n      },\n      onDelete: closeAndDeleteDocument\n    })\n  }, [loadDocument, closeAndDeleteDocument])\n\n  const onSave = useCallback(async () => {\n    await saveChanges({ force: true, silent: false })\n  }, [saveChanges])\n\n  const onSaveToCloud = useCallback(async () => {\n    if (isCloudDocument(compoundKey)) {\n      await saveToCloud()\n    } else {\n      // ask name first\n      prompt({\n        title: 'Save to cloud',\n        text: 'Enter a name for the document:',\n        value: document.name || 'New document',\n        textOk: 'Save',\n        onOk: async function (name) {\n          await updateDocumentProperties({ name })\n          await saveToCloud()\n          applyFocus()\n        }\n      })\n    }\n  }, [compoundKey, document.name, updateDocumentProperties, saveToCloud])\n\n  const onSaveToDisk = async () => {\n    prompt({\n      title: 'Save to disk',\n      text: 'Enter a name for the document:',\n      value: document.name || 'New document',\n      optionText: 'Indentation',\n      optionTitle: 'Select whether to format or compact the data before saving',\n      optionValue: formattingOnSave,\n      optionOptions: FORMATTING_OPTIONS,\n      optionChange: setFormattingOnSave,\n      textOk: 'Save',\n      onOk: (name, formatting) => {\n        // get out of \"accept auto repair\" mode, so we will copy repaired code in Tree mode\n        jsonEditorRef.acceptAutoRepair()\n\n        // wait until next tick so the data is actually repaired\n        setTimeout(() => {\n          saveToDisk(name, formatting)\n          applyFocus()\n        })\n      }\n    })\n  }\n\n  function onLoadFromUrl() {\n    setShowOpenUrlPrompt(true)\n  }\n\n  const onSaveToUrl = async () => {\n    prompt({\n      className: 'save-url-prompt',\n      title: 'Save to url',\n      text: (\n        <div>\n          <p>Enter a public url of a server.</p>\n          <p>\n            When clicking Save, an HTTP POST request will be send to the selected url with the JSON\n            document as body. The url must be secure (https), must not require authentication, and\n            must have CORS enabled.\n          </p>\n        </div>\n      ),\n      value: document.savedToUrl || document.loadedFromUrl || '',\n      optionText: 'Indentation',\n      optionTitle: 'Select whether to format or compact the data before saving',\n      optionValue: formattingOnSave,\n      optionOptions: FORMATTING_OPTIONS,\n      optionChange: setFormattingOnSave,\n      textOk: 'Save',\n      onOk: (name, formatting) => {\n        // get out of \"accept auto repair\" mode, so we will copy repaired code in Tree mode\n        jsonEditorRef.acceptAutoRepair()\n\n        // wait until next tick so the data is actually repaired\n        setTimeout(() => {\n          saveToUrl(name, formatting)\n          applyFocus()\n        })\n      }\n    })\n  }\n\n  const onExportToCSV = () => {\n    // TODO: open popup where you can specify options and a name, see a preview, and save to disk or copy to clipboard\n    // TODO: implement modal option \"header: boolean\"\n    // TODO: implement modal option \"flatten: boolean\"\n    // debug('export to CSV', document)\n    // const name = 'document.csv'\n    // const options = {\n    //   header: true\n    // }\n    // exportToCSV(name, options)\n\n    setShowCSVExportModal(true)\n  }\n\n  /**\n   * @param {FormattingOption} formatting\n   */\n  async function onCopy(formatting) {\n    try {\n      // get out of \"accept auto repair\" mode, so we will copy repaired code in Tree mode\n      const updatedContent = jsonEditorRef.acceptAutoRepair()\n\n      const clipboard = stringifyContent(updatedContent, parser, formatting, indentation)\n\n      await navigator.clipboard.writeText(clipboard)\n\n      applyFocus()\n\n      notifySuccess('Document copied to clipboard')\n    } catch (error) {\n      // TODO: this is ugly code, refactor this\n      if (formatting === Formatting.FORMAT || formatting === Formatting.COMPACT) {\n        const message =\n          `Failed to ${formatting} the document. ` +\n          'Fix the document and click copy again, or use \"Copy as-is\". ' +\n          error.toString()\n        console.error(message)\n        notifyError(message)\n      } else {\n        console.error(error)\n        notifyError(error)\n      }\n    }\n  }\n\n  const onDeleteDocument = () => {\n    confirm({\n      title: 'Delete document',\n      text: `Are you sure you want to delete document \"${document.name}\"?`,\n      textOk: 'Delete',\n      classOk: 'danger',\n      onOk: () => {\n        closeAndDeleteDocument(compoundKey)\n      }\n    })\n  }\n\n  const updateContent = useCallback(\n    async function (content) {\n      await updateDocument({ ...document, content })\n    },\n    [updateDocument, document]\n  )\n\n  const handleClassName = useCallback(\n    (path) => {\n      const key = path.length > 0 ? '/' + path.join('/') : ''\n      const operation = diff[key]\n      if (operation) {\n        return `diff-${operation}`\n      }\n    },\n    [diff]\n  )\n\n  function onSchema() {\n    schemaModal({\n      indentation,\n      queryLanguageId,\n      onChangeQueryLanguage,\n      initialSchema: document.schema,\n      panelId,\n      allPanels,\n      onOk: (schema) => {\n        debug('Selected JSON Schema', schema)\n        updateDocument({ ...document, schema }, /* saveImmediately = */ true)\n      }\n    })\n  }\n\n  const onDocumentProperties = useCallback(\n    function () {\n      documentPropertiesModal({ document, compoundKey })\n    },\n    [document, compoundKey]\n  )\n\n  function onShare() {\n    shareModal({ document, compoundKey })\n  }\n\n  function onConfiguration() {\n    setShowConfigurationModal(true)\n  }\n\n  const title = isCloudDocument(compoundKey)\n    ? 'Rename document. Document is stored in the cloud'\n    : 'Rename document. Document is stored locally in your browser'\n\n  // attach a global event listener to listen for hot keys\n  // only react when this panel has focus, that is when this\n  // panel had the last mouse or keyboard event of all panels.\n  useEffect(() => {\n    async function onDocumentKeyDown(event) {\n      const key = event.key.toUpperCase()\n\n      // Save\n      if (event.ctrlKey && !event.shiftKey && key === 'S') {\n        event.preventDefault()\n        event.stopPropagation()\n\n        await onSave()\n      }\n\n      // Open\n      if (event.ctrlKey && !event.shiftKey && key === 'O') {\n        event.preventDefault()\n        event.stopPropagation()\n\n        await onOpen()\n      }\n\n      // Document properties\n      if (event.ctrlKey && event.altKey && !event.shiftKey && key === 'I') {\n        event.preventDefault()\n        event.stopPropagation()\n\n        onDocumentProperties()\n      }\n    }\n\n    if (focus) {\n      debug('addEventListener for global keydown panelId:', panelId)\n      window.document.body.addEventListener('keydown', onDocumentKeyDown)\n\n      return () => {\n        debug('removeEventListener for global keydown panelId:', panelId)\n        window.document.body.removeEventListener('keydown', onDocumentKeyDown)\n      }\n    }\n  }, [focus, panelId, onOpen, onSave, onDocumentProperties])\n\n  function applyFocus() {\n    if (jsonEditorRef && jsonEditorRef.focus) {\n      jsonEditorRef.focus()\n    }\n  }\n\n  function onRenderMenu(items, { modal }) {\n    if (modal || !showFullScreen) {\n      return\n    }\n\n    return items.concat({\n      type: 'button',\n      icon: faMinimize,\n      title: 'Exit full screen (ESC)',\n      onClick: closeFullScreen\n    })\n  }\n\n  function openFullScreen() {\n    debug('openFullScreen')\n\n    // TODO: this is hacky\n    if (window.disablePageScroll) {\n      debug('disabling page scroll')\n      window.disablePageScroll()\n    }\n\n    setShowFullScreen(true)\n\n    escapeFullScreenHandler.current = onEscape(null, closeFullScreen)\n  }\n\n  function closeFullScreen() {\n    debug('closeFullScreen')\n\n    setShowFullScreen(false)\n    if (escapeFullScreenHandler.current) {\n      escapeFullScreenHandler.current.destroy()\n      escapeFullScreenHandler.current = null\n    }\n  }\n\n  return (\n    <div className=\"panel\" ref={observePanel}>\n      <FileDrop onDrop={(files) => loadFromDisk(files[0])}>\n        {/*\n        It would be nice to change the text when hovering it,\n        but that gives some issues on both Firefox and Chrome\n        when dragging over this text (which changes on the fly)\n        */}\n        <div className=\"drag-space-before\"></div>\n        <div className=\"drag-info\">Drag &apos;n drop your JSON document here...</div>\n        <div className=\"drag-space-after\"></div>\n      </FileDrop>\n      <div className={classnames('panel-menu', { wrap: wrapMenu })}>\n        <div className=\"document-details\" ref={observeDocumentDetails}>\n          <div\n            className=\"local-storage-error-icon\"\n            data-tip={String(localStorageError)}\n            style={{ display: localStorageError ? '' : 'none' }}\n          >\n            <FontAwesomeIcon icon={faExclamationTriangle} />\n          </div>\n\n          {document.schema && document.schema.type !== 'NONE' && (\n            <button\n              className={classnames('menu-button schema', { error: schema.error })}\n              disabled={loading || error}\n              onClick={onSchema}\n              title={\n                schema.error\n                  ? `Failed to load JSON Schema: ${schema.error}`\n                  : schema.loading\n                  ? 'Loading JSON schema...'\n                  : 'This document is validated against a JSON schema. Click to view or change the schema.'\n              }\n            >\n              {schema.loading ? (\n                <FontAwesomeIcon icon={faCircleNotch} spin fixedWidth />\n              ) : (\n                <JSONSchemaIcon backgroundColor=\"#6f9970\" />\n              )}\n              {schema.error && <span className=\"error\">Error</span>}\n            </button>\n          )}\n\n          {!loading && document && document._id ? (\n            <button\n              disabled={loading || error}\n              className={classnames('menu-button name', { unnamed: !document.name })}\n              title={title}\n              onClick={onRename}\n            >\n              {isCloudDocument(compoundKey) ? <FontAwesomeIcon icon={faCloud} /> : null}\n              {document.name}\n              <FontAwesomeIcon icon={faEdit} />\n            </button>\n          ) : null}\n        </div>\n        {showChangesText ? (\n          <div className={classnames('unsaved-changes', { visible: showChanges })}>\n            changed (\n            <button className=\"save-now\" onClick={onSave}>\n              save now\n            </button>\n            )\n          </div>\n        ) : (\n          <button\n            className={classnames('menu-button unsaved-changes', { visible: showChanges })}\n            onClick={onSave}\n            title=\"There are unsaved changes. Click to save now.\"\n          >\n            <FontAwesomeIcon icon={faSaveRegular} />\n          </button>\n        )}\n        <div className=\"space\"></div>\n        <div className=\"buttons\">\n          <button\n            className=\"menu-button\"\n            disabled={loading}\n            onClick={onNew}\n            title=\"Open a new, empty document\"\n          >\n            <FontAwesomeIcon icon={faFile} />\n            {showButtonsText && ' New'}\n          </button>\n\n          <div className=\"menu-button dropdown-button\">\n            <FontAwesomeIcon icon={faFolderOpen} />\n            {showButtonsText && ' Open'} <FontAwesomeIcon icon={faCaretDown} />\n            <div className=\"dropdown-menu right\">\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading}\n                onClick={onOpen}\n                title=\"Open a recent document from the cloud or local storage\"\n              >\n                <FontAwesomeIcon icon={faFolderOpen} fixedWidth /> Open recent file\n              </button>\n              <input\n                type=\"file\"\n                ref={refSelectFile}\n                onChange={(event) => loadFromDisk(event.target.files[0])}\n                style={{ display: 'none' }}\n              />\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading}\n                onClick={() => refSelectFile.current.click()}\n                title=\"Open a document from disk\"\n              >\n                <FontAwesomeIcon icon={faLaptop} fixedWidth /> Open from disk\n              </button>\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading}\n                onClick={onLoadFromUrl}\n                title=\"Open a document from url\"\n              >\n                <FontAwesomeIcon icon={faLink} fixedWidth /> Open from url\n              </button>\n            </div>\n          </div>\n\n          <div className=\"menu-button dropdown-button\">\n            <FontAwesomeIcon icon={faSave} />\n            {showButtonsText && ' Save'} <FontAwesomeIcon icon={faCaretDown} />\n            <div className=\"dropdown-menu right\">\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading || error}\n                onClick={onSaveToCloud}\n                title=\"Save this document in the cloud\"\n              >\n                <FontAwesomeIcon icon={faCloud} fixedWidth /> Save to cloud\n              </button>\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading || error}\n                onClick={onSaveToDisk}\n                title=\"Save this document to disk\"\n              >\n                <FontAwesomeIcon icon={faLaptop} fixedWidth /> Save to disk\n              </button>\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading || error}\n                onClick={onSaveToUrl}\n                title=\"Save this document to a public url\"\n              >\n                <FontAwesomeIcon icon={faLink} fixedWidth /> Send to url\n              </button>\n              <div className=\"dropdown-menu-separator\" />\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading || error}\n                onClick={onExportToCSV}\n                title=\"Export the JSON document to CSV (comma separated values)\"\n              >\n                <FontAwesomeIcon icon={faTable} fixedWidth /> Export to CSV\n              </button>\n            </div>\n          </div>\n\n          <div className=\"menu-button dropdown-button dropdown-with-default\">\n            <button\n              className=\"dropdown-menu-button-default\"\n              disabled={loading}\n              onClick={() => onCopy(Formatting.KEEP)}\n              title=\"Copy this document to the system clipboard\"\n            >\n              <FontAwesomeIcon icon={faCopy} />\n              {showButtonsText && ' Copy'} <FontAwesomeIcon icon={faCaretDown} />\n            </button>\n            <div className=\"dropdown-menu\">\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading}\n                onClick={() => onCopy(Formatting.FORMAT)}\n                title=\"Copy this document to the system clipboard in formatted form\"\n              >\n                <FontAwesomeIcon icon={faCopy} /> Copy formatted\n              </button>\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading}\n                onClick={() => onCopy(Formatting.COMPACT)}\n                title=\"Copy this document to the system clipboard in compacted form\"\n              >\n                <FontAwesomeIcon icon={faCopy} /> Copy compacted\n              </button>\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading}\n                onClick={() => onCopy(Formatting.KEEP)}\n                title=\"Copy this document to the system clipboard without changing indentation\"\n              >\n                <FontAwesomeIcon icon={faCopy} /> Copy as-is\n              </button>\n            </div>\n          </div>\n\n          <div className=\"menu-button dropdown-button\">\n            <FontAwesomeIcon icon={faCog} />\n            {showButtonsText && ' Options'} <FontAwesomeIcon icon={faCaretDown} />\n            <div className=\"dropdown-menu\">\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading || error}\n                onClick={onSchema}\n                title=\"Configure a JSON schema to validate this document\"\n              >\n                <JSONSchemaIcon /> Configure JSON Schema\n              </button>\n              <button\n                className=\"dropdown-menu-button\"\n                onClick={onConfiguration}\n                title={`Change configuration: fontSize, indentation, escaping of special characters`}\n              >\n                <FontAwesomeIcon icon={faGear} fixedWidth /> Configure editor\n              </button>\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading || error}\n                onClick={onDocumentProperties}\n                title=\"See document properties (Ctrl+Alt+I)\"\n              >\n                <FontAwesomeIcon icon={faInfo} fixedWidth /> Document properties\n              </button>\n              <button\n                className=\"dropdown-menu-button\"\n                disabled={loading || error || !document._id}\n                onClick={onDeleteDocument}\n                title=\"Delete document\"\n              >\n                <FontAwesomeIcon icon={faTimes} fixedWidth /> Delete document\n              </button>\n            </div>\n          </div>\n\n          <button\n            className=\"menu-button\"\n            disabled={loading || error}\n            onClick={onShare}\n            title=\"Share\"\n          >\n            <FontAwesomeIcon icon={faShareAlt} />\n            {showButtonsText && ' Share'}\n          </button>\n\n          <button\n            className=\"menu-button\"\n            disabled={loading || error}\n            onClick={openFullScreen}\n            title=\"Show the editor full screen (ESC to exit)\"\n          >\n            <FontAwesomeIcon icon={faMaximize} />\n            {showButtonsText && ' Full screen'}\n          </button>\n        </div>\n      </div>\n\n      <div className={classnames('panel-contents', { error, 'full-screen': showFullScreen })}>\n        <JSONEditorComponent\n          id={panelId}\n          onJsonEditorRef={(ref) => {\n            setJsonEditorRef(ref)\n            jsonEditorRefCopy.current = ref\n            debug('new ref', ref)\n          }}\n          mode={mode}\n          parser={parser}\n          indentation={indentation}\n          tabSize={tabSize}\n          escapeControlCharacters={escapeControlCharacters}\n          escapeUnicodeCharacters={escapeUnicodeCharacters}\n          flattenColumns={flattenColumns}\n          content={content}\n          queryLanguageId={queryLanguageId}\n          onChangeQueryLanguage={onChangeQueryLanguage}\n          onChange={updateContent}\n          onChangeMode={setMode}\n          onClassName={diff ? handleClassName : undefined}\n          onRenderMenu={onRenderMenu}\n          onFocus={() => setFocus(true)}\n          onBlur={() => setFocus(false)}\n          schema={schema.content}\n        />\n        {loading ? (\n          <div className=\"overlay\">\n            <div className=\"loading\">\n              <FontAwesomeIcon icon={faCircleNotch} spin fixedWidth /> loading...\n            </div>\n          </div>\n        ) : null}\n        {error ? (\n          <div className=\"overlay\">\n            <LoadingError error={error} onNew={onNew} />\n          </div>\n        ) : null}\n      </div>\n      {showCSVExportModal && (\n        <CSVExportModal\n          parser={parser}\n          document={document}\n          onClose={() => setShowCSVExportModal(false)}\n        />\n      )}\n      {showConfigurationModal && (\n        <ConfigurationModal\n          config={{\n            fontSize,\n            indentation,\n            tabSize,\n            escapeControlCharacters,\n            escapeUnicodeCharacters,\n            flattenColumns,\n            parserId\n          }}\n          onOk={(updatedConfig) => {\n            debug('configuration updated', updatedConfig)\n            setFontSize(updatedConfig.fontSize)\n            setIndentation(updatedConfig.indentation)\n            setTabSize(updatedConfig.tabSize)\n            setEscapeControlCharacters(updatedConfig.escapeControlCharacters)\n            setEscapeUnicodeCharacters(updatedConfig.escapeUnicodeCharacters)\n            setFlattenColumns(updatedConfig.flattenColumns)\n            setParserId(updatedConfig.parserId)\n          }}\n          onClose={() => setShowConfigurationModal(false)}\n        />\n      )}\n\n      {showOpenUrlPrompt && (\n        <Prompt\n          className=\"open-url-prompt\"\n          title=\"Open url\"\n          text={\n            <div>\n              <p>Enter a public url.</p>\n              <p>\n                Urls which are unsecure (http) or do not have CORS enabled can be loaded via the\n                proxy when they have a public url. Urls which need authentication cannot be loaded.\n              </p>\n            </div>\n          }\n          value={document.loadedFromUrl ? fromProxyUrl(document.loadedFromUrl) : ''}\n          checkboxText=\"Use proxy\"\n          checkboxTitle=\"The request will be routed via the backend of jsoneditoronline.org to work around unsecure urls (http) and CORS limitations\"\n          checkboxValue={isProxyUrl(document.loadedFromUrl)}\n          textOk=\"Open\"\n          onOk={(url, optionValue, checkboxValue) => {\n            debug('Open from url', { url, optionValue, checkboxValue })\n\n            const processedUrl = checkboxValue ? toProxyUrl(url) : url\n\n            loadFromUrl(`url.${processedUrl}`)\n          }}\n          onClose={() => setShowOpenUrlPrompt(false)}\n        />\n      )}\n\n      <StyledReactTooltip />\n    </div>\n  )\n}\n\nfunction JSONSchemaIcon({ valid, backgroundColor }) {\n  const isValid = valid !== false\n  const style = {\n    color: backgroundColor || 'white',\n    position: 'absolute',\n    bottom: 2,\n    left: 4,\n    fontSize: '60%'\n  }\n\n  // TODO: use font awesome icon 'file-check' instead? (pro)\n  return (\n    <div style={{ position: 'relative', display: 'inline-block' }}>\n      <FontAwesomeIcon icon={faFile} fixedWidth />\n      <FontAwesomeIcon style={style} icon={isValid ? faCheck : faTimes} fixedWidth />\n    </div>\n  )\n}\n"],"names":["debug","createDebug","DEFAULT_SCHEMA","type","leftPanel","rightPanel","validateContent","schema","createAjvValidator","LoadingError","error","onNew","useState","showReasons","setShowReasons","className","icon","faExclamationTriangle","toString","reasons","map","reason","index","onClick","faFile","faQuestionCircle","Modal","props","backgroundRef","handleRequestClose","bind","handleKeyDown","close","ref","element","classnames","this","children","window","addEventListener","document","activeElement","blur","removeEventListener","event","target","preventDefault","stopPropagation","onRequestClose","which","clearTimeout","timeout","setTimeout","componentWillUnmount","React","Confirm","okRef","modalRef","handleCancel","handleOk","title","text","classCancel","textCancel","classOk","textOk","focus","onOk","onCancel","onClose","confirm","container","createElement","body","appendChild","createRoot","render","removeChild","DocumentPropertiesModal","compoundKey","documentSource","splitCompoundKey","documentSourceDescription","DOCUMENT_SOURCE_DESCRIPTIONS","name","updated","formatDate","getContentsDescription","content","formatSize","stringifyContent","JSON","length","documentPropertiesModal","OpenModal","onOpen","onDelete","refModal","useRef","refSearchText","searchText","setSearchText","listRecentFiles","recentFiles","setRecentFiles","deletingFileIds","setDeletingFileIds","hasSearchText","isEmpty","trim","filteredRecentFiles","filter","recentFile","toLowerCase","includes","current","documentId","useEffect","placeholder","value","onChange","file","deleting","disabled","isCloudDocument","faCloud","handleDelete","faTimes","openModal","Prompt","state","optionValue","checkboxValue","showValidationResult","valueRef","handleChange","handleChangeOption","handleChangeCheckbox","validate","onSubmit","optionOptions","optionText","optionTitle","option","checkboxText","checkboxTitle","checked","select","setState","optionChange","checkboxChange","prompt","Toggle","options","optionClassName","selected","String","queryLanguages","lodashQueryLanguage","jmespathQueryLanguage","JSONEditorComponent","memoizeValidator","memoizeOne","schemaDefinitions","err","path","message","isEqual","memoizeOnRenderValue","renderJSONSchemaEnum","renderValue","jsoneditor","JSONEditor","onError","console","notifyError","validator","onRenderValue","onJsonEditorRef","id","jsoneditors","prevProps","updateProps","destroy","readOnly","elem","PureComponent","UrlSchemaPreview","url","indentation","queryLanguageId","onChangeQueryLanguage","useAsync","loadUrl","loading","result","mode","mainMenuBar","navigationBar","json","PanelSchemaPreview","panelId","allPanels","selectedPanel","find","panel","parser","PANEL_NAMES_LOWERCASE","CloudDocumentSchemaPreview","SchemaPreviewContents","loadDocument","SchemaModal","initialSchema","setSchema","schemaParser","otherPanel","undefined","PANEL_NAMES","handleSelectPanel","isUrl","schemaConfig","cleanSchemaConfig","schemaModal","useTimeout","timerRef","useCallback","callback","delay","CopyToClipboardButton","data","copiedText","copied","setCopied","setToggleTimeout","onCopy","faCopy","ShareModal","renderUrl","isLocalDocument","createSharableUrl","shareModal","flattenObject","object","separator","flat","recurse","parentPath","key","isObjectOrArray","defaultOptions","header","flatten","CSVExportModal","useLocalStorage","setOptions","setName","setLoading","csv","csvTruncated","preview","setPreview","setLoadingTimeout","applyOptions","newOptions","updatedOptions","createPreview","faTable","wrap","faCircleNotch","spin","filename","addExtensionIfNeeded","saveFileViaAnchor","faSave","tryParseContentMemoized","memoizeLastArguments","parseContent","time","timeEnd","Array","isArray","processedJson","item","Parser","parse","jsonToCsv","transform","entry","isLosslessNumber","ensureCSVSafeJSON","truncate","MAX_PREVIEW_CHARACTERS","omission","previewContent","previewArrayContent","address","city","street","scores","ConfigurationModal","config","fontSizeRef","previewContainerRef","previewMode","setPreviewMode","fontSize","setFontSize","useTab","setUseTab","tabSize","indentationValue","setIndentationValue","escapeControlCharacters","setEscapeControlCharacters","escapeUnicodeCharacters","setEscapeUnicodeCharacters","flattenColumns","setFlattenColumns","parserId","setParserId","setValidate","setContent","indentationNumber","Number","updatedConfig","normalizeFontSize","validationErrors","validateConfig","getJSONParser","applyFontSize","newFontSize","style","setProperty","defaultFontSize","isValidFontSize","getPreviewFontSize","applyFormatting","newUseTab","newIndentationValue","newIndentation","getPreviewIndentation","tryFormatContent","applyPreviewMode","applyUseTab","applyParserId","StyledReactTooltip","newEscapeControlCharacters","faInfoCircle","newEscapeUnicodeCharacters","newFlattenColumns","ParserId","LARGE_DOCUMENT_SIZE","location","reload","onChangeMode","getPreviewTabSize","isValidIndentationValue","isNaN","isFinite","Math","round","isPositiveIntegerNumber","defaultIndentation","defaultTabSize","configuration","errors","Object","keys","some","isProxyUrl","proxyUrl","startsWith","PROXY_URL_BASE","EMPTY_CONTENT","JSONEditorPanel","jsonEditorRef","setJsonEditorRef","setMode","setFocus","localStorageError","unsavedChanges","diff","setIndentation","setTabSize","formattingOnSave","setFormattingOnSave","updateDocument","newDocument","updateDocumentProperties","renameDocument","loadFromDisk","loadFromUrl","saveToCloud","saveToDisk","saveToUrl","saveChanges","closeAndDeleteDocument","showCSVExportModal","setShowCSVExportModal","showConfigurationModal","setShowConfigurationModal","showOpenUrlPrompt","setShowOpenUrlPrompt","showFullScreen","setShowFullScreen","refSelectFile","jsonEditorRefCopy","escapeFullScreenHandler","schemaFromId","schemaFromUrl","status","useSchema","useDimensions","observePanel","observe","menuWidth","width","observeDocumentDetails","documentTitleWidth","remainingWidth","showButtonsText","showChangesText","wrapMenu","showChanges","onSave","force","silent","onSaveToCloud","applyFocus","onSaveToDisk","FORMATTING_OPTIONS","formatting","acceptAutoRepair","onSaveToUrl","savedToUrl","loadedFromUrl","updatedContent","clipboard","navigator","writeText","notifySuccess","Formatting","updateContent","handleClassName","join","operation","onSchema","onDocumentProperties","closeFullScreen","onDocumentKeyDown","toUpperCase","ctrlKey","shiftKey","altKey","FileDrop","onDrop","files","display","fixedWidth","JSONSchemaIcon","backgroundColor","_id","unnamed","faEdit","visible","faSaveRegular","faFolderOpen","faCaretDown","click","faLaptop","faLink","faCog","faGear","faInfo","faShareAlt","disablePageScroll","onEscape","faMaximize","onClassName","onRenderMenu","items","modal","concat","faMinimize","onFocus","onBlur","decodeURIComponent","substring","processedUrl","encodeURIComponent","toProxyUrl","isValid","valid","color","position","bottom","left","faCheck"],"sourceRoot":""}